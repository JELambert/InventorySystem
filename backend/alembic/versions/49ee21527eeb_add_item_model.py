"""add_item_model

Revision ID: 49ee21527eeb
Revises: ad4445d5f714
Create Date: 2025-06-30 12:56:27.759378

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '49ee21527eeb'
down_revision: Union[str, None] = 'ad4445d5f714'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('items',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False, comment='Item name or title'),
    sa.Column('description', sa.Text(), nullable=True, comment='Detailed description of the item'),
    sa.Column('item_type', sa.Enum('ELECTRONICS', 'FURNITURE', 'CLOTHING', 'BOOKS', 'DOCUMENTS', 'TOOLS', 'KITCHEN', 'DECOR', 'COLLECTIBLES', 'HOBBY', 'OFFICE', 'PERSONAL', 'SEASONAL', 'STORAGE', 'OTHER', name='itemtype'), nullable=False, comment='Primary classification of the item'),
    sa.Column('condition', sa.Enum('EXCELLENT', 'VERY_GOOD', 'GOOD', 'FAIR', 'POOR', 'FOR_REPAIR', 'NOT_WORKING', name='itemcondition'), nullable=False, comment='Physical condition of the item'),
    sa.Column('status', sa.Enum('AVAILABLE', 'IN_USE', 'RESERVED', 'LOANED', 'MISSING', 'DISPOSED', 'SOLD', name='itemstatus'), nullable=False, comment='Current status/availability of the item'),
    sa.Column('brand', sa.String(length=100), nullable=True, comment='Brand or manufacturer'),
    sa.Column('model', sa.String(length=100), nullable=True, comment='Model number or name'),
    sa.Column('serial_number', sa.String(length=100), nullable=True, comment='Serial number (if applicable)'),
    sa.Column('barcode', sa.String(length=50), nullable=True, comment='Barcode or UPC (if applicable)'),
    sa.Column('purchase_price', sa.Numeric(precision=10, scale=2), nullable=True, comment='Original purchase price'),
    sa.Column('current_value', sa.Numeric(precision=10, scale=2), nullable=True, comment='Current estimated value'),
    sa.Column('purchase_date', sa.DateTime(timezone=True), nullable=True, comment='Date of purchase'),
    sa.Column('warranty_expiry', sa.DateTime(timezone=True), nullable=True, comment='Warranty expiration date'),
    sa.Column('weight', sa.Numeric(precision=8, scale=3), nullable=True, comment='Weight in kilograms'),
    sa.Column('dimensions', sa.String(length=100), nullable=True, comment="Dimensions (e.g., '10x20x5 cm')"),
    sa.Column('color', sa.String(length=50), nullable=True, comment='Primary color'),
    sa.Column('location_id', sa.Integer(), nullable=False, comment='Location where item is stored'),
    sa.Column('category_id', sa.Integer(), nullable=True, comment='Optional category for organization'),
    sa.Column('is_active', sa.Boolean(), nullable=False, comment='Whether this item is active (soft delete)'),
    sa.Column('version', sa.Integer(), nullable=False, comment='Version number for optimistic locking'),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False, comment='Creation timestamp'),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False, comment='Last update timestamp'),
    sa.Column('notes', sa.Text(), nullable=True, comment='Additional notes or observations'),
    sa.Column('tags', sa.String(length=500), nullable=True, comment='Comma-separated tags for flexible categorization'),
    sa.ForeignKeyConstraint(['category_id'], ['categories.id'], ),
    sa.ForeignKeyConstraint(['location_id'], ['locations.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_items_barcode'), 'items', ['barcode'], unique=True)
    op.create_index(op.f('ix_items_brand'), 'items', ['brand'], unique=False)
    op.create_index(op.f('ix_items_category_id'), 'items', ['category_id'], unique=False)
    op.create_index(op.f('ix_items_id'), 'items', ['id'], unique=False)
    op.create_index(op.f('ix_items_is_active'), 'items', ['is_active'], unique=False)
    op.create_index(op.f('ix_items_item_type'), 'items', ['item_type'], unique=False)
    op.create_index(op.f('ix_items_location_id'), 'items', ['location_id'], unique=False)
    op.create_index(op.f('ix_items_name'), 'items', ['name'], unique=False)
    op.create_index(op.f('ix_items_serial_number'), 'items', ['serial_number'], unique=True)
    op.create_index(op.f('ix_items_status'), 'items', ['status'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_items_status'), table_name='items')
    op.drop_index(op.f('ix_items_serial_number'), table_name='items')
    op.drop_index(op.f('ix_items_name'), table_name='items')
    op.drop_index(op.f('ix_items_location_id'), table_name='items')
    op.drop_index(op.f('ix_items_item_type'), table_name='items')
    op.drop_index(op.f('ix_items_is_active'), table_name='items')
    op.drop_index(op.f('ix_items_id'), table_name='items')
    op.drop_index(op.f('ix_items_category_id'), table_name='items')
    op.drop_index(op.f('ix_items_brand'), table_name='items')
    op.drop_index(op.f('ix_items_barcode'), table_name='items')
    op.drop_table('items')
    # ### end Alembic commands ###
