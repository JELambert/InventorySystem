version: '3.8'

services:
  backend:
    build: 
      context: ./backend
      dockerfile: Dockerfile.dev
    ports:
      - "8000:8000"
    volumes:
      - ./backend/app:/app/app
      - ./backend/tests:/app/tests
      - ./backend/scripts:/app/scripts
      - ./backend/data:/app/data
    environment:
      - PYTHONPATH=/app
      - DATABASE_URL=sqlite+aiosqlite:///./data/inventory.db
      - LOG_LEVEL=INFO
    command: poetry run uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  frontend:
    build: 
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "8501:8501"
    volumes:
      - ./frontend:/app
    environment:
      - API_BASE_URL=http://backend:8000
      - STREAMLIT_SERVER_ADDRESS=0.0.0.0
    depends_on:
      - backend
    command: poetry run streamlit run app.py --server.address 0.0.0.0

  # PostgreSQL service (optional, for production-like testing)
  postgres:
    image: postgres:15
    environment:
      POSTGRES_DB: inventory
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-changeme}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  postgres_data: